
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: gateways.tyk.tyk.io
spec:
  group: tyk.tyk.io
  names:
    kind: Gateway
    listKind: GatewayList
    plural: gateways
    singular: gateway
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Gateway is the Schema for the gateways API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: GatewaySpec defines the desired state of Gateway
          properties:
            config:
              properties:
                control_api_hostname:
                  type: string
                control_api_port:
                  type: integer
                listen_port:
                  format: int32
                  type: integer
                node_secret:
                  minLength: 3
                  type: string
                secret:
                  minLength: 3
                  type: string
                storage:
                  description: "AllowInsecureConfigs      bool                    `json:\"allow_insecure_configs\"`
                    PublicKeyPath             string                  `json:\"public_key_path\"`
                    AllowRemoteConfig         bool                    `bson:\"allow_remote_config\"
                    json:\"allow_remote_config\"` Security                  SecurityConfig
                    \         `json:\"security\"` HttpServerOptions         HttpServerOptionsConfig
                    `json:\"http_server_options\"` ReloadWaitTime            int                     `bson:\"reload_wait_time\"
                    json:\"reload_wait_time\"` VersionHeader             string                  `json:\"version_header\"`
                    UseAsyncSessionWrite      bool                    `json:\"optimisations_use_async_session_write\"`
                    SuppressRedisSignalReload bool                    `json:\"suppress_redis_signal_reload\"`
                    // Gateway Security Policies HashKeys                bool           `json:\"hash_keys\"`
                    HashKeyFunction         string         `json:\"hash_key_function\"`
                    EnableHashedKeysListing bool           `json:\"enable_hashed_keys_listing\"`
                    MinTokenLength          int            `json:\"min_token_length\"`
                    EnableAPISegregation    bool           `json:\"enable_api_segregation\"`
                    TemplatePath            string         `json:\"template_path\"`
                    Policies                PoliciesConfig `json:\"policies\"` DisablePortWhiteList
                    \   bool           `json:\"disable_ports_whitelist\"` // Defines
                    the ports that will be available for the api services to bind
                    to. // This is a map of protocol to PortWhiteList. This allows
                    per protocol // configurations. PortWhiteList map[string]PortWhiteList
                    `json:\"ports_whitelist\"` \n // CE Configurations AppPath string
                    `json:\"app_path\"` \n // Dashboard Configurations UseDBAppConfigs
                    \         bool                   `json:\"use_db_app_configs\"`
                    DBAppConfOptions         DBAppConfOptionsConfig `json:\"db_app_conf_options\"`"
                  properties:
                    addrs:
                      description: Type  string   `json:"type"`
                      items:
                        type: string
                      type: array
                  required:
                  - addrs
                  type: object
              required:
              - control_api_hostname
              - control_api_port
              - listen_port
              - node_secret
              - secret
              - storage
              type: object
            size:
              description: Size is the size of the gateway deployment
              format: int32
              minimum: 0
              type: integer
            type:
              description: Kind is the type of deployment
              enum:
              - Deployment
              - DaemonSet
              type: string
            version:
              description: Version is the version of the gateway docker image
              type: string
          required:
          - config
          - size
          - type
          - version
          type: object
        status:
          description: GatewayStatus defines the observed state of Gateway
          properties:
            nodes:
              description: The names of the Tyk Gateway pods
              items:
                type: string
              type: array
          required:
          - nodes
          type: object
      type: object
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
